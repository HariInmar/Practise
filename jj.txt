SELECT consumer_incentive.Consumer_ID_ID,COUNT(consumer_incentive.Consumer_Incentive_ID) 
AS NumberOfClips FROM consumer_incentive
LEFT JOIN consumer_id
ON consumer_incentive.Consumer_ID_ID=consumer_id.consumer_id_id
GROUP BY consumer_incentive.Consumer_ID_ID;

SELECT Media Property.Media_Property_Id,COUNT(consumer_incentive.Consumer_Incentive_ID) 
AS NumberOfClips FROM Media Property
LEFT JOIN consumer_id
ON consumer_incentive.Consumer_ID_ID=media property.consumer_id_id
GROUP BY consumer_incentive.Consumer_ID_ID;

CREATE EXTERNAL TABLE IF NOT EXISTS dpndw.Media_Property (
  `Media_Property_ID` string,
  `Description` string,
  `Publisher_Party_ID` string,
  `Audit_Date` string,
  `Audit_User` string,
  `Media_Property_Type_ID` string,
  `Media_Property_Vehicle_Type_ID` string,
  `Enforces_Store_Restrictions` string,
  `Enforces_Geo_Restrictions` string,
  `Visible` string,
  `Active` string
)
ROW FORMAT SERDE 'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
WITH SERDEPROPERTIES (
  'serialization.format' = '1'
) LOCATION 's3://pe-elt-prod/export/mdot_master/media_property/'
TBLPROPERTIES ('has_encrypted_data'='false');


select top 10 from media property;

SELECT * FROM dpndw."consumer_id" limit 10;

CREATE EXTERNAL TABLE IF NOT EXISTS Media_Property (
  Media_Property_ID int unsigned,
  Description varchar,
 Publisher_Party_ID int unsigned,
  Audit_Date timestamp,
  Audit_User varchar,
  Media_Property_Type_ID smallint unsigned,
  Media_Property_Vehicle_Type_ID smallint unsigned,
  Enforces_Store_Restrictions varchar,
  Enforces_Geo_Restrictions varchar,
  Visible varchar,
  Active varchar )
STORED AS PARQUET
LOCATION 's3://pe-elt-prod/mdot_master/'
tblproperties ("parquet.compress"="ZLIB");

CREATE EXTERNAL TABLE IF NOT EXISTS dpndw.Media_Property (
  `Media_Property_ID` string,
  `Description` string,
  `Publisher_Party_ID` string,
  `Audit_Date` string,
  `Audit_User` string,
  `Media_Property_Type_ID` string,
  `Media_Property_Vehicle_Type_ID` string,
  `Enforces_Store_Restrictions` string,
  `Enforces_Geo_Restrictions` string,
  `Visible` string,
  `Active` string
)
ROW FORMAT SERDE 'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
WITH SERDEPROPERTIES (
  'serialization.format' = '1'
) LOCATION 's3://pe-elt-prod/export/mdot_master/media_property/'
TBLPROPERTIES ('has_encrypted_data'='false');


*******************
CREATE EXTERNAL TABLE if not exists dpndw.incentive (
  `incentive_id` string,
  `incentive_type_id` string,
  `issuer_id` string,
  `category_id` string,
  `active_date` string,
  `expire_date` string,
  `status` string,
  `value` string,
  `value_type` string,
  `max_value` string,
  `description` string,
  `short_description` string,
  `terms` string,
  `max_overall_redemption_count` string,
  `max_consumer_redemption_count` string,
  `max_transaction_redemption_count` string,
  `days_to_redeem` string,
  `upc_code` string,
  `image_file` string,
  `keywords` string,
  `image_url` string,
  `client_coupon_id` string,
  `offer_code` string,
  `offer_series` string,
  `free_indicator` string,
  `max_free_value` string,
  `value_code` string,
  `base_rule_type` string,
  `base_rule` string,
  `more_rules` string,
  `gs1_co_prefix` string,
  `max_clip_count` string,
  `brand` string,
  `clip_start_date` string,
  `clip_end_date` string,
  `manufacturer` string,
  `approval_datetime` string,
  `approver` string,
  `creation_datetime` string,
  `creator` string,
  `redemption_count` string,
  `clip_count` string,
  `stacking_allowed` string,
  `buyqty` string,
  `buyanyall` string,
  `getqty` string,
  `getanyall` string,
  `max_consumer_redemption_value` string,
  `max_overall_redemption_value` string,
  `redemption_value` string,
  `updated_datetime` string,
  `chouse_updated_datetime` string,
  `inmar_mfg_number` string,
  `prologic_mfg_number` string,
  `nch_mfg_number` string,
  `visible_before_clip` string,
  `visible_after_clip` string,
  `budget_option` string,
  `global_clip_count` string,
  `global_redemption_count` string,
  `max_redemptions_message` string,
  `redemption_message` string,
  `max_global_redemption_count` string,
  `exact_id_required` string,
  `funding_type_id` string,
  `customer_service_flag` string,
  `upc_a` string,
  `incentive_clip_type_id` string,
  `dynamic_ind` string,
  `incentive_program_id` string,
  `discovery_type_id` string,
  `family_code` string,
  `purchase_order_number` string,
  `additional_notes` string,
  `primary_media_property_type_id` string,
  `clientid` string 
)
ROW FORMAT SERDE 'org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe'
WITH SERDEPROPERTIES (
  'serialization.format' = '1'
) LOCATION 's3://pe-elt-prod/export/mdot_client/incentive/'
TBLPROPERTIES ('has_encrypted_data'='false');


******************8main code:
1.drop table if exists
   chowdaryh.dj_basket_list;

create table
   chowdaryh.dj_basket_list as

select
   trans_it.basket_id 

from
   mdot_client.transaction_item trans_it

where
    trans_it.product_id in (282843,260806,260808,260809)
    and trans_it.product_type_id = 1;


2.drop table if exists
   chowdaryh.dj_tmp_basket;
   
create table
   chowdaryh.dj_tmp_basket as

select
   bask_list.basket_id as basket_id,
   trans_it.total_amount as amount_spent,
   trans_it.quantity as quantity,
   trans_it.product_id as product_id,
   case when trans_it.quantity = 0 or trans_it.quantity = null then 0
        else trans_it.total_amount/trans_it.quantity
        end as unit_price, 
   
   trans_it."DATE" as i_date,
   trans."TIME" as i_time,
   trans.consumer_id_id as consumer_id_id,
   trans_it.clientid as client_id

from
   chowdaryh.dj_basket_list bask_list

join
   mdot_client.transaction trans
   on bask_list.basket_id = trans.basket_id


join
   mdot_client.transaction_item trans_it
   on bask_list.basket_id = trans_it.basket_id
   and trans_it.product_id in (2310011035,2310029161,2310001538,2310011130,2310010280,310010339,2310010281,2310002517,2310003069,2310000077,2310010474,2310031484,2310011739,3450014000,3450015112,3450015136,3450015135,3450019500
,3450014429,3450019410,3450015181,3450015118,3450015100,3450015150
,3450014008,3450015236,3450015192,3450015119,3450015213,3450015116
,3450014449,3450015179,3450015129,3450014404)
  and trans.clientid = trans_it.clientid;

3.drop table if exists
   chowdaryh.dj_loyalty_basket;

create table
   chowdaryh.dj_loyalty_basket as

select
   basket.basket_id as basket_id,
   con_id.value as loyalty_id,
   basket.quantity as quantity,
   basket.product_id as product_id,
   basket.unit_price as unit_price,
   basket."I_TIME" as  j_time,
   basket."I_DATE" as  j_date,
   basket.client_id as client_id

from
   chowdaryh.dj_tmp_basket as basket

join
   mdot_client.consumer_id con_id
   on basket.consumer_id_id = con_id.consumer_id_id
   and basket.client_id = con_id.clientid

order by basket.client_id;

4.drop table if exists
   chowdaryh.dj_final_basket;

create table
   chowdaryh.dj_final_basket as

select
   loy_bask.basket_id as basket_id,
   loy_bask.loyalty_id as loyalty_id,
   loy_bask.quantity as quantity,
   loy_bask.product_id as product_id,
   loy_bask.unit_price as unit_price,
   loy_bask."J_TIME" as k_time,
   loy_bask."J_DATE" as k_date,
   loy_bask.client_id as retailer_id,
   ret.description as retailer_description

from chowdaryh.dj_loyalty_basket loy_bask

join
   mdot_client.retailer ret
   on loy_bask.client_id = ret.retailer_id;

*****************************************

select 
ti.basket_id
,r.description as retailer_description
,ci.value as loyalty_id
,ti2.quantity
,ti2.product_id
,p.product_descr as product_description
,ti.product_id as incentive_id
,case when ti2.quantity = 0 or ti2.quantity = null then 0
        else ti2.total_amount/ti2.quantity
        end as unit_price
,ti2."DATE"
from (select * from mdot_client.transaction_item
            where product_id in (282843)
         and product_type_id = 1) as ti
    join mdot_client.transaction t
  on ti.basket_id = t.basket_id
  join (select * from mdot_client.transaction_item where product_id in (3450014000,3450015112,3450015136,3450015135,3450019500
,3450014429,3450019410,3450015181,3450015118,3450015100,3450015150
,3450014008,3450015236,3450015192,3450015119,3450015213,3450015116
,3450014449,3450015179,3450015129,3450014404)) as ti2
on ti.basket_id = ti2.basket_id
  and t.clientid = ti2.clientid
       join  mdot_client.product p
  on cast(ti2.product_id as varchar)  = cast(p.product_id as varchar) 
   and ti2.clientid = p.clientid
  join mdot_client.consumer_id ci
  on t.consumer_id_id = ci.consumer_id_id
  and ti.clientid = ci.clientid
  join mdot_client.retailer r
  on ti2.clientid = r.clientid
  order by ti.basket_id;


averages**********

--select count(*) from (
select 
--ti.basket_id
r.description as retailer_description
,count(ci.value)as loyalty_id
,avg(ti2.quantity) as Quantity
,ti2.product_id
--,p.product_descr as product_description
,ti.product_id as incentive_id
,avg(case when ti2.quantity = 0 or ti2.quantity = null then 0
        else ti2.total_amount/ti2.quantity
        end)as unit_price 
,year(ti2."DATE") as Yr
from (select * from mdot_client.transaction_item
            where product_id in (282843)
         and product_type_id = 1) as ti
    join mdot_client.transaction t
  on ti.basket_id = t.basket_id
  join (select * from mdot_client.transaction_item where product_id in (3450014000,3450015112,3450015136,3450015135,3450019500
,3450014429,3450019410,3450015181,3450015118,3450015100,3450015150
,3450014008,3450015236,3450015192,3450015119,3450015213,3450015116
,3450014449,3450015179,3450015129,3450014404)) as ti2
on ti.basket_id = ti2.basket_id
  and t.clientid = ti2.clientid
       join  mdot_client.product p
  on cast(ti2.product_id as varchar)  = cast(p.product_id as varchar) 
   and ti2.clientid = p.clientid
  join mdot_client.consumer_id ci
  on t.consumer_id_id = ci.consumer_id_id
  and ti.clientid = ci.clientid
  join mdot_client.retailer r
  on ti2.clientid = r.clientid
  group by r.description,ti2.product_id,ti.product_id,year(ti2."DATE") 
  order by avg(ti2.quantity);
  --)a;

*************

****************
1. labels - 16 records and 14 prod descripions

--select count(*) from (
select 
--ti.basket_id
r.description as retailer_description
,count(ci.value)as ShopperCount
,avg(ti2.quantity) as AverageQuantity
,ti2.product_id
,p.product_descr as product_description
,ti.product_id as incentive_id
,avg(case when ti2.quantity = 0 or ti2.quantity = null then 0
        else ti2.total_amount/ti2.quantity
        end)as AverageUnit_Price 
,year(ti2."DATE") as Yr
from (select * from mdot_client.transaction_item
            where product_id in (282843)
         and product_type_id = 1) as ti
    join mdot_client.transaction t
  on ti.basket_id = t.basket_id
  join (select * from mdot_client.transaction_item where product_id in (3450014000,3450015112,3450015136,3450015135,3450019500
,3450014429,3450019410,3450015181,3450015118,3450015100,3450015150
,3450014008,3450015236,3450015192,3450015119,3450015213,3450015116
,3450014449,3450015179,3450015129,3450014404)) as ti2
on ti.basket_id = ti2.basket_id
  and t.clientid = ti2.clientid
       join  mdot_client.product p
  on cast(ti2.product_id as varchar)  = cast(p.product_id as varchar) 
   and ti2.clientid = p.clientid
  join mdot_client.consumer_id ci
  on t.consumer_id_id = ci.consumer_id_id
  and ti.clientid = ci.clientid
  join mdot_client.retailer r
  on ti2.clientid = r.clientid
  group by p.product_descr,r.description,ti2.product_id,ti.product_id,year(ti2."DATE") 
  order by avg(ti2.quantity);
  --)a;

**********************************

2. labels - 14 records and 14 prod descripions

--select count(*) from (
select 
--ti.basket_id
r.description as retailer_description
,count(ci.value)as ShopperCount
,avg(ti2.quantity) as AverageQuantity
--,ti2.product_id
,p.product_descr as product_description
,ti.product_id as incentive_id
,avg(case when ti2.quantity = 0 or ti2.quantity = null then 0
        else ti2.total_amount/ti2.quantity
        end)as AverageUnit_Price 
,year(ti2."DATE") as Yr
from (select * from mdot_client.transaction_item
            where product_id in (282843)
         and product_type_id = 1) as ti
    join mdot_client.transaction t
  on ti.basket_id = t.basket_id
  join (select * from mdot_client.transaction_item where product_id in (3450014000,3450015112,3450015136,3450015135,3450019500
,3450014429,3450019410,3450015181,3450015118,3450015100,3450015150
,3450014008,3450015236,3450015192,3450015119,3450015213,3450015116
,3450014449,3450015179,3450015129,3450014404)) as ti2
on ti.basket_id = ti2.basket_id
  and t.clientid = ti2.clientid
       join  mdot_client.product p
  on cast(ti2.product_id as varchar)  = cast(p.product_id as varchar) 
   and ti2.clientid = p.clientid
  join mdot_client.consumer_id ci
  on t.consumer_id_id = ci.consumer_id_id
  and ti.clientid = ci.clientid
  join mdot_client.retailer r
  on ti2.clientid = r.clientid
  group by p.product_descr,r.description,ti.product_id,year(ti2."DATE") 
  order by avg(ti2.quantity);
  --)a;
***********************************


select 
r.Retailer_ID
,r.DESCRIPTION as Retailer
,avg(t.amount) as AverageAmountPerTrip 
from mdot_client.retailer r 
join mdot_client.transaction t 
on r.clientid = t.clientid
where "DATE" between '2017-01-30' and '2017-08-01'
 and Retailer_ID in (2,13,107,180,182,183,184,185,201) 
 group by r.Retailer_ID, r.DESCRIPTION 
 order by r.Retailer_ID;